.globl _start
.section .text.nsize
nsize:
mov $8,%rax
ret
.section .text.exit
exit:
push %rdi
mov linux@GOTPCREL(%rip),%rax
add $-56,%rsp
push %rax
mov 64(%rsp),%rax
mov %rax,8(%rsp)
mov $0,%rax
mov %rax,16(%rsp)
mov $0,%rax
mov %rax,24(%rsp)
mov $0,%rax
mov %rax,32(%rsp)
mov $0,%rax
mov %rax,40(%rsp)
mov $0,%rax
mov %rax,48(%rsp)
mov $60,%rax
mov %rax,56(%rsp)
pop %rax
pop %rdi
pop %rsi
pop %rdx
pop %rcx
pop %r8
pop %r9
call *%rax
add $8,%rsp
add $8,%rsp
ret
.section .text.initbrk
initbrk:
push %rdi
mov linux@GOTPCREL(%rip),%rax
add $-56,%rsp
push %rax
mov $0,%rax
mov %rax,8(%rsp)
mov $0,%rax
mov %rax,16(%rsp)
mov $0,%rax
mov %rax,24(%rsp)
mov $0,%rax
mov %rax,32(%rsp)
mov $0,%rax
mov %rax,40(%rsp)
mov $0,%rax
mov %rax,48(%rsp)
mov $12,%rax
mov %rax,56(%rsp)
pop %rax
pop %rdi
pop %rsi
pop %rdx
pop %rcx
pop %r8
pop %r9
call *%rax
add $8,%rsp
push %rax
mov linux@GOTPCREL(%rip),%rax
add $-56,%rsp
push %rax
mov add@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov 96(%rsp),%rax
mov %rax,8(%rsp)
mov 88(%rsp),%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
mov %rax,8(%rsp)
mov $0,%rax
mov %rax,16(%rsp)
mov $0,%rax
mov %rax,24(%rsp)
mov $0,%rax
mov %rax,32(%rsp)
mov $0,%rax
mov %rax,40(%rsp)
mov $0,%rax
mov %rax,48(%rsp)
mov $12,%rax
mov %rax,56(%rsp)
pop %rax
pop %rdi
pop %rsi
pop %rdx
pop %rcx
pop %r8
pop %r9
call *%rax
add $8,%rsp
mov 0(%rsp),%rax
add $8,%rsp
add $8,%rsp
ret
.section .text.memcpy
memcpy:
push %rdi
push %rsi
push %rdx
mov 0(%rsp),%rax
test %rax,%rax
je l2400000500$
mov 0(%rsp),%rax
push %rax
jmp l2400000701$
l2400000700$:
mov %rax,(%rsp)
l2400000701$:
mov poke@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov 48(%rsp),%rax
mov %rax,8(%rsp)
mov peek@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 56(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
mov store@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
lea 48(%rsp),%rax
mov %rax,8(%rsp)
mov add@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov $1,%rax
mov %rax,8(%rsp)
mov 72(%rsp),%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
mov store@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
lea 40(%rsp),%rax
mov %rax,8(%rsp)
mov add@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov $1,%rax
mov %rax,8(%rsp)
mov 64(%rsp),%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
mov sub@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov $1,%rax
mov %rax,8(%rsp)
mov 24(%rsp),%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
test %rax,%rax
jne l2400000700$
pop %rax
l2400000500$:
add $24,%rsp
ret
.section .text.memcmp
memcmp:
push %rdi
push %rsi
push %rdx
mov $1,%rax
push %rax
mov 8(%rsp),%rax
test %rax,%rax
je l3300000400$
mov 8(%rsp),%rax
push %rax
jmp l3300001001$
l3300001000$:
mov %rax,(%rsp)
l3300001001$:
mov cmpe@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov peek@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 72(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
mov peek@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 64(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
test %rax,%rax
je l3400001000$
mov store@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
lea 56(%rsp),%rax
mov %rax,8(%rsp)
mov add@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov $1,%rax
mov %rax,8(%rsp)
mov 80(%rsp),%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
mov store@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
lea 48(%rsp),%rax
mov %rax,8(%rsp)
mov add@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov $1,%rax
mov %rax,8(%rsp)
mov 72(%rsp),%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
mov sub@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov $1,%rax
mov %rax,8(%rsp)
mov 24(%rsp),%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
jmp l3400001001$
l3400001000$:
mov store@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
lea 32(%rsp),%rax
mov %rax,8(%rsp)
mov $0,%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
mov $0,%rax
l3400001001$:
test %rax,%rax
jne l3300001000$
pop %rax
mov 0(%rsp),%rax
l3300000400$:
add $8,%rsp
add $24,%rsp
ret
.section .text.strncmp
strncmp:
push %rdi
push %rsi
push %rdx
mov $1,%rax
push %rax
mov 8(%rsp),%rax
test %rax,%rax
je l4500000400$
mov 8(%rsp),%rax
push %rax
jmp l4500001001$
l4500001000$:
mov %rax,(%rsp)
l4500001001$:
mov cmpe@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov peek@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 72(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
mov peek@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 64(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
test %rax,%rax
je l4600001000$
mov peek@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 48(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
test %rax,%rax
je l4800000500$
mov store@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
lea 56(%rsp),%rax
mov %rax,8(%rsp)
mov add@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov $1,%rax
mov %rax,8(%rsp)
mov 80(%rsp),%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
mov store@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
lea 48(%rsp),%rax
mov %rax,8(%rsp)
mov add@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov $1,%rax
mov %rax,8(%rsp)
mov 72(%rsp),%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
mov sub@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov $1,%rax
mov %rax,8(%rsp)
mov 24(%rsp),%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
l4800000500$:
jmp l4600001001$
l4600001000$:
mov store@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
lea 32(%rsp),%rax
mov %rax,8(%rsp)
mov $0,%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
mov $0,%rax
l4600001001$:
test %rax,%rax
jne l4500001000$
pop %rax
mov 0(%rsp),%rax
l4500000400$:
add $8,%rsp
add $24,%rsp
ret
.section .text.stdin
stdin:
push %rdi
push %rsi
mov linux@GOTPCREL(%rip),%rax
add $-56,%rsp
push %rax
mov $0,%rax
mov %rax,8(%rsp)
mov 72(%rsp),%rax
mov %rax,16(%rsp)
mov 64(%rsp),%rax
mov %rax,24(%rsp)
mov $0,%rax
mov %rax,32(%rsp)
mov $0,%rax
mov %rax,40(%rsp)
mov $0,%rax
mov %rax,48(%rsp)
mov $0,%rax
mov %rax,56(%rsp)
pop %rax
pop %rdi
pop %rsi
pop %rdx
pop %rcx
pop %r8
pop %r9
call *%rax
add $8,%rsp
add $16,%rsp
ret
.section .text.stdout
stdout:
push %rdi
push %rsi
mov linux@GOTPCREL(%rip),%rax
add $-56,%rsp
push %rax
mov $1,%rax
mov %rax,8(%rsp)
mov 72(%rsp),%rax
mov %rax,16(%rsp)
mov 64(%rsp),%rax
mov %rax,24(%rsp)
mov $0,%rax
mov %rax,32(%rsp)
mov $0,%rax
mov %rax,40(%rsp)
mov $0,%rax
mov %rax,48(%rsp)
mov $1,%rax
mov %rax,56(%rsp)
pop %rax
pop %rdi
pop %rsi
pop %rdx
pop %rcx
pop %r8
pop %r9
call *%rax
add $8,%rsp
add $16,%rsp
ret
.section .text.stderr
stderr:
push %rdi
push %rsi
mov linux@GOTPCREL(%rip),%rax
add $-56,%rsp
push %rax
mov $2,%rax
mov %rax,8(%rsp)
mov 72(%rsp),%rax
mov %rax,16(%rsp)
mov 64(%rsp),%rax
mov %rax,24(%rsp)
mov $0,%rax
mov %rax,32(%rsp)
mov $0,%rax
mov %rax,40(%rsp)
mov $0,%rax
mov %rax,48(%rsp)
mov $1,%rax
mov %rax,56(%rsp)
pop %rax
pop %rdi
pop %rsi
pop %rdx
pop %rcx
pop %r8
pop %r9
call *%rax
add $8,%rsp
add $16,%rsp
ret
.section .text.retry
retry:
push %rdi
push %rsi
push %rdx
mov $0,%rax
push %rax
mov 16(%rsp),%rax
push %rax
jmp l6100001101$
l6100001100$:
mov %rax,(%rsp)
l6100001101$:
mov 32(%rsp),%rax
add $-16,%rsp
push %rax
mov 24(%rsp),%rax
mov %rax,8(%rsp)
mov sub@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov 48(%rsp),%rax
mov %rax,8(%rsp)
mov 64(%rsp),%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
push %rax
mov cmpe@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov 24(%rsp),%rax
mov %rax,8(%rsp)
mov neg@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov $1,%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
test %rax,%rax
je l6300003100$
mov store@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
lea 40(%rsp),%rax
mov %rax,8(%rsp)
mov neg@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov $1,%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
l6300003100$:
mov 0(%rsp),%rax
test %rax,%rax
je l6400001500$
mov add@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov 24(%rsp),%rax
mov %rax,8(%rsp)
mov 32(%rsp),%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
l6400001500$:
add $8,%rsp
test %rax,%rax
jne l6100001100$
pop %rax
push %rax
mov 8(%rsp),%rax
test %rax,%rax
jne l6800000100$
mov 0(%rsp),%rax
l6800000100$:
add $8,%rsp
add $8,%rsp
add $24,%rsp
ret
.section .text.alloc
alloc:
push %rdi
push %rsi
mov load@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 24(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
push %rax
mov store@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov 40(%rsp),%rax
mov %rax,8(%rsp)
mov add@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov 56(%rsp),%rax
mov %rax,8(%rsp)
mov load@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 80(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
mov 0(%rsp),%rax
add $8,%rsp
add $16,%rsp
ret
.section .text.put_byte
put_byte:
push %rdi
push %rsi
mov load@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 24(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
push %rax
mov poke@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov 24(%rsp),%rax
mov %rax,8(%rsp)
mov 32(%rsp),%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
mov store@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov 40(%rsp),%rax
mov %rax,8(%rsp)
mov add@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov $1,%rax
mov %rax,8(%rsp)
mov 48(%rsp),%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
add $8,%rsp
add $16,%rsp
ret
.section .text.put_digit
put_digit:
push %rdi
push %rsi
mov put_byte@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov 32(%rsp),%rax
mov %rax,8(%rsp)
mov add@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov $'0,%rax
mov %rax,8(%rsp)
mov 48(%rsp),%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
add $16,%rsp
ret
.section .text.put_digits
put_digits:
push %rdi
push %rsi
mov 0(%rsp),%rax
test %rax,%rax
je l8500000400$
mov put_digits@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov 32(%rsp),%rax
mov %rax,8(%rsp)
mov div@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov $10,%rax
mov %rax,8(%rsp)
mov 48(%rsp),%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
mov put_digit@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov 32(%rsp),%rax
mov %rax,8(%rsp)
mov mod@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov $10,%rax
mov %rax,8(%rsp)
mov 48(%rsp),%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
l8500000400$:
add $16,%rsp
ret
.section .text.put_number
put_number:
push %rdi
push %rsi
mov 0(%rsp),%rax
test %rax,%rax
je l8900000600$
mov put_digits@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov 32(%rsp),%rax
mov %rax,8(%rsp)
mov 24(%rsp),%rax
test %rax,%rax
je l8900002600$
mov 24(%rsp),%rax
jmp l8900002601$
l8900002600$:
mov $'0,%rax
l8900002601$:
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
jmp l8900000601$
l8900000600$:
mov put_byte@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov 32(%rsp),%rax
mov %rax,8(%rsp)
mov $'0,%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
l8900000601$:
add $16,%rsp
ret
.section .text.put_string
put_string:
push %rdi
push %rsi
mov 0(%rsp),%rax
push %rax
jmp l9300000701$
l9300000700$:
mov %rax,(%rsp)
l9300000701$:
mov peek@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 16(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
test %rax,%rax
je l9500000400$
mov put_byte@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov 40(%rsp),%rax
mov %rax,8(%rsp)
mov peek@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 40(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
mov add@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov $1,%rax
mov %rax,8(%rsp)
mov 24(%rsp),%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
l9500000400$:
test %rax,%rax
jne l9300000700$
pop %rax
add $16,%rsp
ret
.section .text.put_string_byte
put_string_byte:
push %rdi
push %rsi
push %rdx
mov put_string@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov 40(%rsp),%rax
mov %rax,8(%rsp)
mov 32(%rsp),%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
mov put_byte@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov 40(%rsp),%rax
mov %rax,8(%rsp)
mov 24(%rsp),%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
add $24,%rsp
ret
.section .text.is_sp
is_sp:
push %rdi
mov cmpe@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov 24(%rsp),%rax
mov %rax,8(%rsp)
mov $' ,%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
add $8,%rsp
ret
.section .text.is_tb
is_tb:
push %rdi
mov cmpe@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov 24(%rsp),%rax
mov %rax,8(%rsp)
mov $'\t,%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
add $8,%rsp
ret
.section .text.is_lf
is_lf:
push %rdi
mov cmpe@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov 24(%rsp),%rax
mov %rax,8(%rsp)
mov $'\n,%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
add $8,%rsp
ret
.section .text.is_cr
is_cr:
push %rdi
mov cmpe@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov 24(%rsp),%rax
mov %rax,8(%rsp)
mov $'\r,%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
add $8,%rsp
ret
.section .text.is_us
is_us:
push %rdi
mov cmpe@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov 24(%rsp),%rax
mov %rax,8(%rsp)
mov $'_,%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
add $8,%rsp
ret
.section .text.is_sq
is_sq:
push %rdi
mov cmpe@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov 24(%rsp),%rax
mov %rax,8(%rsp)
mov $'\',%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
add $8,%rsp
ret
.section .text.is_dq
is_dq:
push %rdi
mov cmpe@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov 24(%rsp),%rax
mov %rax,8(%rsp)
mov $'\",%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
add $8,%rsp
ret
.section .text.is_in
is_in:
push %rdi
push %rsi
push %rdx
mov not@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov cmpa@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov 56(%rsp),%rax
mov %rax,8(%rsp)
mov 48(%rsp),%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
test %rax,%rax
jne l11200003600$
mov cmpa@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov 40(%rsp),%rax
mov %rax,8(%rsp)
mov 56(%rsp),%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
l11200003600$:
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
add $24,%rsp
ret
.section .text.is_AZ
is_AZ:
push %rdi
mov is_in@GOTPCREL(%rip),%rax
add $-24,%rsp
push %rax
mov 32(%rsp),%rax
mov %rax,8(%rsp)
mov $'A,%rax
mov %rax,16(%rsp)
mov $'Z,%rax
mov %rax,24(%rsp)
pop %rax
pop %rdi
pop %rsi
pop %rdx
call *%rax
add $8,%rsp
ret
.section .text.is_az
is_az:
push %rdi
mov is_in@GOTPCREL(%rip),%rax
add $-24,%rsp
push %rax
mov 32(%rsp),%rax
mov %rax,8(%rsp)
mov $'a,%rax
mov %rax,16(%rsp)
mov $'z,%rax
mov %rax,24(%rsp)
pop %rax
pop %rdi
pop %rsi
pop %rdx
call *%rax
add $8,%rsp
ret
.section .text.is_09
is_09:
push %rdi
mov is_in@GOTPCREL(%rip),%rax
add $-24,%rsp
push %rax
mov 32(%rsp),%rax
mov %rax,8(%rsp)
mov $'0,%rax
mov %rax,16(%rsp)
mov $'9,%rax
mov %rax,24(%rsp)
pop %rax
pop %rdi
pop %rsi
pop %rdx
call *%rax
add $8,%rsp
ret
.section .text.is_ws
is_ws:
push %rdi
mov is_sp@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 16(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
test %rax,%rax
jne l12000000400$
mov is_tb@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 16(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
test %rax,%rax
jne l12100000400$
mov is_lf@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 16(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
test %rax,%rax
jne l12200001100$
mov is_cr@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 16(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
l12200001100$:
l12100000400$:
l12000000400$:
add $8,%rsp
ret
.section .text.is_id
is_id:
push %rdi
mov is_AZ@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 16(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
test %rax,%rax
jne l12600000400$
mov is_az@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 16(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
test %rax,%rax
jne l12700000400$
mov is_09@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 16(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
test %rax,%rax
jne l12800001100$
mov is_us@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 16(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
l12800001100$:
l12700000400$:
l12600000400$:
add $8,%rsp
ret
.section .text.is_lit
is_lit:
push %rdi
mov is_09@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 16(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
test %rax,%rax
jne l13200001100$
mov is_sq@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 16(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
l13200001100$:
add $8,%rsp
ret
.section .text.klength
klength:
push %rdi
mov add@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov 24(%rsp),%rax
mov %rax,8(%rsp)
mov nsize@GOTPCREL(%rip),%rax
push %rax
pop %rax
call *%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
add $8,%rsp
ret
.section .text.kline_no
kline_no:
push %rdi
mov add@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov klength@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 40(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
mov nsize@GOTPCREL(%rip),%rax
push %rax
pop %rax
call *%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
add $8,%rsp
ret
.section .text.kcol_no
kcol_no:
push %rdi
mov add@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov kline_no@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 40(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
mov nsize@GOTPCREL(%rip),%rax
push %rax
pop %rax
call *%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
add $8,%rsp
ret
.section .text.kin
kin:
push %rdi
mov add@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov kcol_no@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 40(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
mov nsize@GOTPCREL(%rip),%rax
push %rax
pop %rax
call *%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
add $8,%rsp
ret
.section .text.ksize
ksize:
mov kin@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov nsize@GOTPCREL(%rip),%rax
push %rax
pop %rax
call *%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
ret
.section .text.caret_byte
caret_byte:
push %rdi
mov peek@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov load@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov kin@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 48(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
add $8,%rsp
ret
.section .text.caret_is
caret_is:
push %rdi
push %rsi
mov 8(%rsp),%rax
add $-8,%rsp
push %rax
mov peek@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov load@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 48(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
add $16,%rsp
ret
.section .text.check_eof
check_eof:
push %rdi
mov caret_byte@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 16(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
test %rax,%rax
jne l15100000700$
mov exit@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov $2,%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
l15100000700$:
add $8,%rsp
ret
.section .text.caret_next_is
caret_next_is:
push %rdi
push %rsi
mov check_eof@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 24(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov cmpe@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov 24(%rsp),%rax
mov %rax,8(%rsp)
mov peek@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov add@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov $1,%rax
mov %rax,8(%rsp)
mov load@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov kin@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 104(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
add $16,%rsp
ret
.section .text.caret_advance
caret_advance:
push %rdi
mov check_eof@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 16(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov store@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov kin@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 40(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
mov add@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov $1,%rax
mov %rax,8(%rsp)
mov load@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov kin@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 80(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
mov cmpe@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov caret_byte@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 40(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
mov $'\n,%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
test %rax,%rax
je l16000001400$
mov store@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov kcol_no@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 40(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
mov $1,%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
mov store@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov kline_no@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 40(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
mov add@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov $1,%rax
mov %rax,8(%rsp)
mov load@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov kline_no@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 80(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
jmp l16000001401$
l16000001400$:
mov store@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov kcol_no@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 40(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
mov add@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov $1,%rax
mov %rax,8(%rsp)
mov load@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov kcol_no@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 80(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
l16000001401$:
add $8,%rsp
ret
.section .text.caret_eat
caret_eat:
push %rdi
push %rsi
mov cmpe@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov 24(%rsp),%rax
mov %rax,8(%rsp)
mov caret_byte@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 48(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
test %rax,%rax
je l16700000400$
mov caret_advance@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 24(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov $1,%rax
l16700000400$:
add $16,%rsp
ret
.section .text.caret_eat_by
caret_eat_by:
push %rdi
push %rsi
mov 8(%rsp),%rax
add $-8,%rsp
push %rax
mov caret_byte@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 32(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
test %rax,%rax
je l17200000400$
mov caret_advance@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 16(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov $1,%rax
l17200000400$:
add $16,%rsp
ret
.section .text.caret_eat_for
caret_eat_for:
push %rdi
push %rsi
mov 8(%rsp),%rax
add $-8,%rsp
push %rax
mov caret_byte@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 32(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
test %rax,%rax
je l17700000900$
mov $1,%rax
push %rax
jmp l17700001101$
l17700001100$:
mov %rax,(%rsp)
l17700001101$:
mov caret_eat_by@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov 40(%rsp),%rax
mov %rax,8(%rsp)
mov 32(%rsp),%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
test %rax,%rax
jne l17700001100$
pop %rax
l17700000900$:
add $16,%rsp
ret
.section .text.ws
ws:
push %rdi
mov $1,%rax
push %rax
jmp l18200001101$
l18200001100$:
mov %rax,(%rsp)
l18200001101$:
mov caret_eat@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov 32(%rsp),%rax
mov %rax,8(%rsp)
mov $'#,%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
test %rax,%rax
je l18400001700$
mov $1,%rax
push %rax
jmp l18400001901$
l18400001900$:
mov %rax,(%rsp)
l18400001901$:
mov not@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov caret_eat@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov 56(%rsp),%rax
mov %rax,8(%rsp)
mov $'#,%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
test %rax,%rax
je l18600003100$
mov caret_advance@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 32(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
l18600003100$:
test %rax,%rax
jne l18400001900$
pop %rax
l18400001700$:
test %rax,%rax
jne l18700002600$
mov caret_eat_by@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov is_ws@GOTPCREL(%rip),%rax
mov %rax,8(%rsp)
mov 32(%rsp),%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
l18700002600$:
test %rax,%rax
jne l18200001100$
pop %rax
mov not@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov caret_byte@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 32(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
test %rax,%rax
je l18900001200$
mov store@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov 24(%rsp),%rax
mov %rax,8(%rsp)
mov $0,%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
mov $1,%rax
l18900001200$:
add $8,%rsp
ret
.section .text.id
id:
push %rdi
mov caret_eat_for@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov is_id@GOTPCREL(%rip),%rax
mov %rax,8(%rsp)
mov 24(%rsp),%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
add $8,%rsp
ret
.section .text.number
number:
push %rdi
mov caret_eat_for@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov is_09@GOTPCREL(%rip),%rax
mov %rax,8(%rsp)
mov 24(%rsp),%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
add $8,%rsp
ret
.section .text.string
string:
push %rdi
mov caret_eat@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov 24(%rsp),%rax
mov %rax,8(%rsp)
mov $'",%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
test %rax,%rax
je l20000000800$
mov $1,%rax
push %rax
jmp l20000001501$
l20000001500$:
mov %rax,(%rsp)
l20000001501$:
mov $1,%rax
push %rax
jmp l20100001901$
l20100001900$:
mov %rax,(%rsp)
l20100001901$:
mov caret_eat@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov 40(%rsp),%rax
mov %rax,8(%rsp)
mov $'\\,%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
test %rax,%rax
je l20300003100$
mov caret_advance@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 32(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
l20300003100$:
test %rax,%rax
jne l20100001900$
pop %rax
mov not@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov cmpe@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov caret_byte@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 64(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
mov $'",%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
test %rax,%rax
je l20500002700$
mov caret_advance@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 24(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
l20500002700$:
test %rax,%rax
jne l20000001500$
pop %rax
mov caret_advance@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 16(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
l20000000800$:
add $8,%rsp
ret
.section .text.char
char:
push %rdi
mov caret_eat@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov 24(%rsp),%rax
mov %rax,8(%rsp)
mov $'\',%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
test %rax,%rax
je l21000000800$
mov caret_eat@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov 24(%rsp),%rax
mov %rax,8(%rsp)
mov $'\\,%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
mov caret_advance@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 16(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov caret_eat@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov 24(%rsp),%rax
mov %rax,8(%rsp)
mov $'\',%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
mov $1,%rax
l21000000800$:
add $8,%rsp
ret
.section .text.punct
punct:
push %rdi
mov caret_eat@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov 24(%rsp),%rax
mov %rax,8(%rsp)
mov $'(,%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
test %rax,%rax
jne l21700000400$
mov caret_eat@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov 24(%rsp),%rax
mov %rax,8(%rsp)
mov $'),%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
test %rax,%rax
jne l21800001500$
mov caret_eat@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov 24(%rsp),%rax
mov %rax,8(%rsp)
mov $'?,%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
l21800001500$:
l21700000400$:
add $8,%rsp
ret
.section .text.next
next:
push %rdi
mov load@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 16(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
test %rax,%rax
jne l22600001000$
mov exit@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov $6,%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
l22600001000$:
mov ws@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 16(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
test %rax,%rax
jne l22800000500$
mov load@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov kin@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 32(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
push %rax
mov number@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 24(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
test %rax,%rax
jne l23000000800$
mov string@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 24(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
test %rax,%rax
jne l23100000800$
mov char@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 24(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
test %rax,%rax
jne l23200000800$
mov id@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 24(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
test %rax,%rax
jne l23300000800$
mov punct@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 24(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
test %rax,%rax
jne l23500001300$
mov exit@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov $5,%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
l23500001300$:
l23300000800$:
l23200000800$:
l23100000800$:
l23000000800$:
mov store@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov 32(%rsp),%rax
mov %rax,8(%rsp)
mov 24(%rsp),%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
mov store@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov klength@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 48(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
mov sub@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov 48(%rsp),%rax
mov %rax,8(%rsp)
mov load@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov kin@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 88(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
add $8,%rsp
l22800000500$:
add $8,%rsp
ret
.section .text.have
have:
push %rdi
push %rsi
mov load@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 24(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
test %rax,%rax
je l24100000500$
mov memcmp@GOTPCREL(%rip),%rax
add $-24,%rsp
push %rax
mov 32(%rsp),%rax
mov %rax,8(%rsp)
mov load@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 56(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,16(%rsp)
mov load@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov klength@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 72(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,24(%rsp)
pop %rax
pop %rdi
pop %rsi
pop %rdx
call *%rax
test %rax,%rax
je l24200000900$
mov not@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov peek@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov add@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov 56(%rsp),%rax
mov %rax,8(%rsp)
mov load@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov klength@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 96(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
l24200000900$:
l24100000500$:
add $16,%rsp
ret
.section .text.have_lit
have_lit:
push %rdi
mov caret_is@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov is_lit@GOTPCREL(%rip),%rax
mov %rax,8(%rsp)
mov 24(%rsp),%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
add $8,%rsp
ret
.section .text.have_str
have_str:
push %rdi
mov caret_is@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov is_dq@GOTPCREL(%rip),%rax
mov %rax,8(%rsp)
mov 24(%rsp),%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
add $8,%rsp
ret
.section .text.have_id
have_id:
push %rdi
mov caret_is@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov is_id@GOTPCREL(%rip),%rax
mov %rax,8(%rsp)
mov 24(%rsp),%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
add $8,%rsp
ret
.section .text.eat
eat:
push %rdi
push %rsi
mov have@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov 32(%rsp),%rax
mov %rax,8(%rsp)
mov 24(%rsp),%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
push %rax
mov 0(%rsp),%rax
test %rax,%rax
je l25600001000$
mov next@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 32(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
l25600001000$:
mov 0(%rsp),%rax
add $8,%rsp
add $16,%rsp
ret
.section .text.flake
flake:
push %rdi
mov mul@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov $100,%rax
mov %rax,8(%rsp)
mov add@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov load@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov kcol_no@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 80(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
mov mul@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov $1000000,%rax
mov %rax,8(%rsp)
mov load@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov kline_no@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 104(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
add $8,%rsp
ret
.section .text.cmp_token
cmp_token:
push %rdi
push %rsi
mov ne@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov load@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov klength@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 64(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
mov load@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov klength@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 56(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
test %rax,%rax
jne l26600000900$
mov not@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov strncmp@GOTPCREL(%rip),%rax
add $-24,%rsp
push %rax
mov load@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 72(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
mov load@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 64(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,16(%rsp)
mov load@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov klength@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 88(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,24(%rsp)
pop %rax
pop %rdi
pop %rsi
pop %rdx
call *%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
l26600000900$:
add $16,%rsp
ret
.section .text.verbatim
verbatim:
push %rdi
push %rsi
mov add@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov load@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 40(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
mov load@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov klength@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 56(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
push %rax
mov load@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 24(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
push %rax
jmp l27300001001$
l27300001000$:
mov %rax,(%rsp)
l27300001001$:
mov cmpa@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov 24(%rsp),%rax
mov %rax,8(%rsp)
mov 32(%rsp),%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
test %rax,%rax
je l27500000400$
mov put_byte@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov 48(%rsp),%rax
mov %rax,8(%rsp)
mov peek@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 40(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
mov add@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov $1,%rax
mov %rax,8(%rsp)
mov 24(%rsp),%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
l27500000400$:
test %rax,%rax
jne l27300001000$
pop %rax
add $8,%rsp
add $16,%rsp
ret
.section .text.ins1
ins1:
push %rdi
push %rsi
mov put_string_byte@GOTPCREL(%rip),%rax
add $-24,%rsp
push %rax
mov 40(%rsp),%rax
mov %rax,8(%rsp)
mov 32(%rsp),%rax
mov %rax,16(%rsp)
mov $' ,%rax
mov %rax,24(%rsp)
pop %rax
pop %rdi
pop %rsi
pop %rdx
call *%rax
add $16,%rsp
ret
.section .text.mnem0
mnem0:
push %rdi
push %rsi
mov put_string_byte@GOTPCREL(%rip),%rax
add $-24,%rsp
push %rax
mov 40(%rsp),%rax
mov %rax,8(%rsp)
mov 32(%rsp),%rax
mov %rax,16(%rsp)
mov $'\n,%rax
mov %rax,24(%rsp)
pop %rax
pop %rdi
pop %rsi
pop %rdx
call *%rax
add $16,%rsp
ret
.section .text.mnem1
mnem1:
push %rdi
push %rsi
push %rdx
mov ins1@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov 40(%rsp),%rax
mov %rax,8(%rsp)
mov 32(%rsp),%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
mov mnem0@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov 40(%rsp),%rax
mov %rax,8(%rsp)
mov 24(%rsp),%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
add $24,%rsp
ret
.section .text.mnem2
mnem2:
push %rdi
push %rsi
push %rdx
push %rcx
mov ins1@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov 48(%rsp),%rax
mov %rax,8(%rsp)
mov 40(%rsp),%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
mov put_string_byte@GOTPCREL(%rip),%rax
add $-24,%rsp
push %rax
mov 56(%rsp),%rax
mov %rax,8(%rsp)
mov 40(%rsp),%rax
mov %rax,16(%rsp)
mov $',,%rax
mov %rax,24(%rsp)
pop %rax
pop %rdi
pop %rsi
pop %rdx
call *%rax
mov mnem0@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov 48(%rsp),%rax
mov %rax,8(%rsp)
mov 24(%rsp),%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
add $32,%rsp
ret
.section .text.cz
cz:
push %rdi
mov mnem2@GOTPCREL(%rip),%rax
add $-32,%rsp
push %rax
mov 40(%rsp),%rax
mov %rax,8(%rsp)
.section .text..s29600001800
.s29600001800:.string "test"
.previous
mov .s29600001800@GOTPCREL(%rip),%rax
mov %rax,16(%rsp)
.section .text..s29600002500
.s29600002500:.string "%rax"
.previous
mov .s29600002500@GOTPCREL(%rip),%rax
mov %rax,24(%rsp)
.section .text..s29700000100
.s29700000100:.string "%rax"
.previous
mov .s29700000100@GOTPCREL(%rip),%rax
mov %rax,32(%rsp)
pop %rax
pop %rdi
pop %rsi
pop %rdx
pop %rcx
call *%rax
add $8,%rsp
ret
.section .text.label_id
label_id:
push %rdi
push %rsi
mov put_byte@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov 32(%rsp),%rax
mov %rax,8(%rsp)
mov $'l,%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
mov put_number@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov 32(%rsp),%rax
mov %rax,8(%rsp)
mov 24(%rsp),%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
mov put_byte@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov 32(%rsp),%rax
mov %rax,8(%rsp)
mov $'$,%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
add $16,%rsp
ret
.section .text.jc
jc:
push %rdi
push %rsi
push %rdx
mov put_string_byte@GOTPCREL(%rip),%rax
add $-24,%rsp
push %rax
mov 48(%rsp),%rax
mov %rax,8(%rsp)
mov 32(%rsp),%rax
mov %rax,16(%rsp)
mov $' ,%rax
mov %rax,24(%rsp)
pop %rax
pop %rdi
pop %rsi
pop %rdx
call *%rax
mov label_id@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov 40(%rsp),%rax
mov %rax,8(%rsp)
mov 32(%rsp),%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
mov put_byte@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov 40(%rsp),%rax
mov %rax,8(%rsp)
mov $'\n,%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
add $24,%rsp
ret
.section .text.label
label:
push %rdi
push %rsi
mov label_id@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov 32(%rsp),%rax
mov %rax,8(%rsp)
mov 24(%rsp),%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
mov put_string@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov 32(%rsp),%rax
mov %rax,8(%rsp)
.section .text..s31100000100
.s31100000100:.string ":\n"
.previous
mov .s31100000100@GOTPCREL(%rip),%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
add $16,%rsp
ret
.section .text.jmp
jmp:
push %rdi
push %rsi
mov jc@GOTPCREL(%rip),%rax
add $-24,%rsp
push %rax
mov 40(%rsp),%rax
mov %rax,8(%rsp)
mov 32(%rsp),%rax
mov %rax,16(%rsp)
.section .text..s31400000100
.s31400000100:.string "jmp"
.previous
mov .s31400000100@GOTPCREL(%rip),%rax
mov %rax,24(%rsp)
pop %rax
pop %rdi
pop %rsi
pop %rdx
call *%rax
add $16,%rsp
ret
.section .text.je
je:
push %rdi
push %rsi
mov jc@GOTPCREL(%rip),%rax
add $-24,%rsp
push %rax
mov 40(%rsp),%rax
mov %rax,8(%rsp)
mov 32(%rsp),%rax
mov %rax,16(%rsp)
.section .text..s31700000100
.s31700000100:.string "je"
.previous
mov .s31700000100@GOTPCREL(%rip),%rax
mov %rax,24(%rsp)
pop %rax
pop %rdi
pop %rsi
pop %rdx
call *%rax
add $16,%rsp
ret
.section .text.jne
jne:
push %rdi
push %rsi
mov jc@GOTPCREL(%rip),%rax
add $-24,%rsp
push %rax
mov 40(%rsp),%rax
mov %rax,8(%rsp)
mov 32(%rsp),%rax
mov %rax,16(%rsp)
.section .text..s32000000100
.s32000000100:.string "jne"
.previous
mov .s32000000100@GOTPCREL(%rip),%rax
mov %rax,24(%rsp)
pop %rax
pop %rdi
pop %rsi
pop %rdx
call *%rax
add $16,%rsp
ret
.section .text.load_rip
load_rip:
push %rdi
mov put_string@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov 24(%rsp),%rax
mov %rax,8(%rsp)
.section .text..s32300000100
.s32300000100:.string "@GOTPCREL(%rip),%rax\n"
.previous
mov .s32300000100@GOTPCREL(%rip),%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
add $8,%rsp
ret
.section .text.str_section
str_section:
push %rdi
push %rsi
push %rdx
mov put_string@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov 40(%rsp),%rax
mov %rax,8(%rsp)
.section .text..s32600000100
.s32600000100:.string ".section .text..s"
.previous
mov .s32600000100@GOTPCREL(%rip),%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
mov put_number@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov 40(%rsp),%rax
mov %rax,8(%rsp)
mov 32(%rsp),%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
mov put_string@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov 40(%rsp),%rax
mov %rax,8(%rsp)
.section .text..s32800000100
.s32800000100:.string "\n.s"
.previous
mov .s32800000100@GOTPCREL(%rip),%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
mov put_number@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov 40(%rsp),%rax
mov %rax,8(%rsp)
mov 32(%rsp),%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
mov put_string@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov 40(%rsp),%rax
mov %rax,8(%rsp)
.section .text..s33000000100
.s33000000100:.string ":.string "
.previous
mov .s33000000100@GOTPCREL(%rip),%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
mov verbatim@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov 40(%rsp),%rax
mov %rax,8(%rsp)
mov 24(%rsp),%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
mov put_string@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov 40(%rsp),%rax
mov %rax,8(%rsp)
.section .text..s33200000100
.s33200000100:.string "\n.previous\n"
.previous
mov .s33200000100@GOTPCREL(%rip),%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
add $24,%rsp
ret
.section .text.str_load
str_load:
push %rdi
push %rsi
mov put_string@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov 32(%rsp),%rax
mov %rax,8(%rsp)
.section .text..s33400002900
.s33400002900:.string "mov .s"
.previous
mov .s33400002900@GOTPCREL(%rip),%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
mov put_number@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov 32(%rsp),%rax
mov %rax,8(%rsp)
mov 24(%rsp),%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
mov load_rip@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 24(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
add $16,%rsp
ret
.section .text.xbrk
xbrk:
push %rdi
mov add@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov 24(%rsp),%rax
mov %rax,8(%rsp)
mov nsize@GOTPCREL(%rip),%rax
push %rax
pop %rax
call *%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
add $8,%rsp
ret
.section .text.xout
xout:
push %rdi
mov add@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov xbrk@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 40(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
mov nsize@GOTPCREL(%rip),%rax
push %rax
pop %rax
call *%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
add $8,%rsp
ret
.section .text.xcaret
xcaret:
push %rdi
mov add@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov xout@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 40(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
mov nsize@GOTPCREL(%rip),%rax
push %rax
pop %rax
call *%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
add $8,%rsp
ret
.section .text.xscalar
xscalar:
push %rdi
mov add@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov xcaret@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 40(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
mov ksize@GOTPCREL(%rip),%rax
push %rax
pop %rax
call *%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
add $8,%rsp
ret
.section .text.xtype
xtype:
push %rdi
mov add@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov xscalar@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 40(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
mov nsize@GOTPCREL(%rip),%rax
push %rax
pop %rax
call *%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
add $8,%rsp
ret
.section .text.xdepth
xdepth:
push %rdi
mov add@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov xtype@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 40(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
mov nsize@GOTPCREL(%rip),%rax
push %rax
pop %rax
call *%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
add $8,%rsp
ret
.section .text.xsize
xsize:
mov xdepth@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov nsize@GOTPCREL(%rip),%rax
push %rax
pop %rax
call *%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
ret
.section .text.ocaret
ocaret:
push %rdi
mov add@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov 24(%rsp),%rax
mov %rax,8(%rsp)
mov nsize@GOTPCREL(%rip),%rax
push %rax
pop %rax
call *%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
add $8,%rsp
ret
.section .text.otype
otype:
push %rdi
mov add@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov ocaret@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 40(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
mov ksize@GOTPCREL(%rip),%rax
push %rax
pop %rax
call *%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
add $8,%rsp
ret
.section .text.odepth
odepth:
push %rdi
mov add@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov otype@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 40(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
mov nsize@GOTPCREL(%rip),%rax
push %rax
pop %rax
call *%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
add $8,%rsp
ret
.section .text.oisdef
oisdef:
push %rdi
mov add@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov odepth@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 40(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
mov nsize@GOTPCREL(%rip),%rax
push %rax
pop %rax
call *%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
add $8,%rsp
ret
.section .text.oisvar
oisvar:
push %rdi
mov add@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov oisdef@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 40(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
mov nsize@GOTPCREL(%rip),%rax
push %rax
pop %rax
call *%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
add $8,%rsp
ret
.section .text.osize
osize:
mov oisvar@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov nsize@GOTPCREL(%rip),%rax
push %rax
pop %rax
call *%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
ret
.section .text.targ
targ:
push %rdi
mov add@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov 24(%rsp),%rax
mov %rax,8(%rsp)
mov nsize@GOTPCREL(%rip),%rax
push %rax
pop %rax
call *%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
add $8,%rsp
ret
.section .text.tcaret
tcaret:
push %rdi
mov add@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov targ@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 40(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
mov nsize@GOTPCREL(%rip),%rax
push %rax
pop %rax
call *%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
add $8,%rsp
ret
.section .text.tkind
tkind:
push %rdi
mov add@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov tcaret@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 40(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
mov ksize@GOTPCREL(%rip),%rax
push %rax
pop %rax
call *%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
add $8,%rsp
ret
.section .text.tsize
tsize:
mov tkind@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov nsize@GOTPCREL(%rip),%rax
push %rax
pop %rax
call *%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
ret
.section .text.fpushpop
fpushpop:
push %rdi
push %rsi
push %rdx
push %rcx
mov 16(%rsp),%rax
test %rax,%rax
je l36400000400$
mov put_string@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov xout@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 64(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
mov 32(%rsp),%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
mov put_number@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov xout@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 64(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
mov shl@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov $3,%rax
mov %rax,8(%rsp)
mov 64(%rsp),%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
mov put_string@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov xout@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 64(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
.section .text..s36700000100
.s36700000100:.string ",%rsp\n"
.previous
mov .s36700000100@GOTPCREL(%rip),%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
mov store@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov xdepth@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 64(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
mov 24(%rsp),%rax
add $-16,%rsp
push %rax
mov 64(%rsp),%rax
mov %rax,8(%rsp)
mov load@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov xdepth@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 104(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
l36400000400$:
add $32,%rsp
ret
.section .text.pushpop
pushpop:
push %rdi
push %rsi
push %rdx
push %rcx
mov mnem1@GOTPCREL(%rip),%rax
add $-24,%rsp
push %rax
mov xout@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 72(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
mov 40(%rsp),%rax
mov %rax,16(%rsp)
mov 48(%rsp),%rax
mov %rax,24(%rsp)
pop %rax
pop %rdi
pop %rsi
pop %rdx
call *%rax
mov store@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov xdepth@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 64(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
mov 24(%rsp),%rax
add $-16,%rsp
push %rax
mov $1,%rax
mov %rax,8(%rsp)
mov load@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov xdepth@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 104(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
add $32,%rsp
ret
.section .text.fpop
fpop:
push %rdi
push %rsi
mov fpushpop@GOTPCREL(%rip),%rax
add $-32,%rsp
push %rax
mov 48(%rsp),%rax
mov %rax,8(%rsp)
mov 40(%rsp),%rax
mov %rax,16(%rsp)
.section .text..s37400002500
.s37400002500:.string "add $"
.previous
mov .s37400002500@GOTPCREL(%rip),%rax
mov %rax,24(%rsp)
mov add@GOTPCREL(%rip),%rax
mov %rax,32(%rsp)
pop %rax
pop %rdi
pop %rsi
pop %rdx
pop %rcx
call *%rax
add $16,%rsp
ret
.section .text.fpush
fpush:
push %rdi
push %rsi
mov fpushpop@GOTPCREL(%rip),%rax
add $-32,%rsp
push %rax
mov 48(%rsp),%rax
mov %rax,8(%rsp)
mov 40(%rsp),%rax
mov %rax,16(%rsp)
.section .text..s37700002600
.s37700002600:.string "add $-"
.previous
mov .s37700002600@GOTPCREL(%rip),%rax
mov %rax,24(%rsp)
mov sub@GOTPCREL(%rip),%rax
mov %rax,32(%rsp)
pop %rax
pop %rdi
pop %rsi
pop %rdx
pop %rcx
call *%rax
add $16,%rsp
ret
.section .text.book_var
book_var:
push %rdi
push %rsi
push %rdx
mov store@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov otype@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 48(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
mov load@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov xtype@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 72(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
mov store@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov ocaret@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 48(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
mov load@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov xcaret@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 72(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
mov store@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov klength@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov ocaret@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 64(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
mov load@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov klength@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov xcaret@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 88(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
mov store@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov oisvar@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 48(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
mov 24(%rsp),%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
add $24,%rsp
ret
.section .text.book_fn
book_fn:
push %rdi
push %rsi
push %rdx
mov book_var@GOTPCREL(%rip),%rax
add $-24,%rsp
push %rax
mov 48(%rsp),%rax
mov %rax,8(%rsp)
mov 32(%rsp),%rax
mov %rax,16(%rsp)
mov $0,%rax
mov %rax,24(%rsp)
pop %rax
pop %rdi
pop %rsi
pop %rdx
call *%rax
add $24,%rsp
ret
.section .text.book_let
book_let:
push %rdi
push %rsi
push %rdx
mov book_var@GOTPCREL(%rip),%rax
add $-24,%rsp
push %rax
mov 48(%rsp),%rax
mov %rax,8(%rsp)
mov 32(%rsp),%rax
mov %rax,16(%rsp)
mov $1,%rax
mov %rax,24(%rsp)
pop %rax
pop %rdi
pop %rsi
pop %rdx
call *%rax
mov store@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov odepth@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 40(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
mov load@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov xdepth@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 72(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
add $24,%rsp
ret
.section .text.book_param
book_param:
push %rdi
push %rsi
push %rdx
mov store@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov otype@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 40(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
mov 32(%rsp),%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
mov store@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov odepth@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 40(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
mov load@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov xdepth@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 72(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
mov store@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov ocaret@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 40(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
mov load@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov tcaret@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 64(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
mov store@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov klength@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov ocaret@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 56(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
mov load@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov klength@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov tcaret@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 80(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
mov store@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov oisvar@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 40(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
mov $1,%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
add $24,%rsp
ret
.section .text.push_book
push_book:
push %rdi
push %rsi
push %rdx
mov alloc@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov xbrk@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 48(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
mov osize@GOTPCREL(%rip),%rax
push %rax
pop %rax
call *%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
push %rax
mov store@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov 24(%rsp),%rax
mov %rax,8(%rsp)
mov load@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 56(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
mov 24(%rsp),%rax
add $-24,%rsp
push %rax
mov 48(%rsp),%rax
mov %rax,8(%rsp)
mov 40(%rsp),%rax
mov %rax,16(%rsp)
mov 32(%rsp),%rax
mov %rax,24(%rsp)
pop %rax
pop %rdi
pop %rsi
pop %rdx
call *%rax
mov store@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov oisdef@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 40(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
mov $0,%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
mov store@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov 40(%rsp),%rax
mov %rax,8(%rsp)
mov 24(%rsp),%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
mov 0(%rsp),%rax
add $8,%rsp
add $24,%rsp
ret
.section .text.pop_book
pop_book:
push %rdi
mov store@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov 24(%rsp),%rax
mov %rax,8(%rsp)
mov load@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov load@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 56(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
add $8,%rsp
ret
.section .text.try_lookup
try_lookup:
push %rdi
mov $0,%rax
push %rax
mov load@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 24(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
push %rax
mov 0(%rsp),%rax
test %rax,%rax
je l41600000900$
mov 0(%rsp),%rax
push %rax
jmp l41600001401$
l41600001400$:
mov %rax,(%rsp)
l41600001401$:
mov cmp_token@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov xcaret@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 64(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
mov ocaret@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 40(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
test %rax,%rax
je l41700001900$
mov load@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 16(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
jmp l41700001901$
l41700001900$:
mov store@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
lea 40(%rsp),%rax
mov %rax,8(%rsp)
mov 24(%rsp),%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
mov $0,%rax
l41700001901$:
test %rax,%rax
jne l41600001400$
pop %rax
l41600000900$:
mov 8(%rsp),%rax
add $8,%rsp
add $8,%rsp
add $8,%rsp
ret
.section .text.lookup
lookup:
push %rdi
mov try_lookup@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 16(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
test %rax,%rax
jne l42600001000$
mov exit@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov $1,%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
l42600001000$:
add $8,%rsp
ret
.section .text.new_type
new_type:
push %rdi
push %rsi
mov alloc@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov xbrk@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 48(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
mov tsize@GOTPCREL(%rip),%rax
push %rax
pop %rax
call *%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
push %rax
mov store@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov 24(%rsp),%rax
mov %rax,8(%rsp)
mov $0,%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
mov store@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov tcaret@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 40(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
mov xcaret@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 56(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
mov store@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov tkind@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 40(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
mov 32(%rsp),%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
mov 0(%rsp),%rax
add $8,%rsp
add $16,%rsp
ret
.section .text.type_arity
type_arity:
push %rdi
mov $0,%rax
push %rax
mov 8(%rsp),%rax
test %rax,%rax
je l44000000900$
mov 8(%rsp),%rax
push %rax
jmp l44000001101$
l44000001100$:
mov %rax,(%rsp)
l44000001101$:
mov store@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
lea 32(%rsp),%rax
mov %rax,8(%rsp)
mov add@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov $1,%rax
mov %rax,8(%rsp)
mov 56(%rsp),%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
mov load@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 16(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
test %rax,%rax
jne l44000001100$
pop %rax
l44000000900$:
mov 0(%rsp),%rax
add $8,%rsp
add $8,%rsp
ret
.section .text.type_equal
type_equal:
push %rdi
push %rsi
mov 8(%rsp),%rax
test %rax,%rax
je l44700000500$
mov 0(%rsp),%rax
test %rax,%rax
je l44800000400$
mov cmpe@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov 32(%rsp),%rax
mov %rax,8(%rsp)
mov 24(%rsp),%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
test %rax,%rax
jne l44900000500$
mov load@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov tkind@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 40(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
push %rax
mov load@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov tkind@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 40(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
push %rax
mov cmpe@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov 32(%rsp),%rax
mov %rax,8(%rsp)
mov 24(%rsp),%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
test %rax,%rax
je l45200000400$
mov store@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
lea 48(%rsp),%rax
mov %rax,8(%rsp)
mov load@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov targ@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 80(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
mov store@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
lea 40(%rsp),%rax
mov %rax,8(%rsp)
mov load@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov targ@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 72(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
mov $1,%rax
push %rax
jmp l45400001101$
l45400001100$:
mov %rax,(%rsp)
l45400001101$:
mov type_equal@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov 56(%rsp),%rax
mov %rax,8(%rsp)
mov 48(%rsp),%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
test %rax,%rax
je l45600000800$
mov store@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
lea 56(%rsp),%rax
mov %rax,8(%rsp)
mov load@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 72(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
mov store@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
lea 48(%rsp),%rax
mov %rax,8(%rsp)
mov load@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 64(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
mov $1,%rax
l45600000800$:
test %rax,%rax
jne l45400001100$
pop %rax
mov cmpe@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov 48(%rsp),%rax
mov %rax,8(%rsp)
mov 40(%rsp),%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
l45200000400$:
add $8,%rsp
add $8,%rsp
l44900000500$:
l44800000400$:
l44700000500$:
add $16,%rsp
ret
.section .text.stack_offset
stack_offset:
push %rdi
push %rsi
mov sub@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov load@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov xdepth@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 64(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
mov load@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov odepth@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 56(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
add $16,%rsp
ret
.section .text.letvar
letvar:
push %rdi
push %rsi
push %rdx
mov push_book@GOTPCREL(%rip),%rax
add $-24,%rsp
push %rax
mov book_let@GOTPCREL(%rip),%rax
mov %rax,8(%rsp)
mov 40(%rsp),%rax
mov %rax,16(%rsp)
mov $0,%rax
mov %rax,24(%rsp)
pop %rax
pop %rdi
pop %rsi
pop %rdx
call *%rax
push %rax
mov next@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov xcaret@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 48(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov 24(%rsp),%rax
add $-16,%rsp
push %rax
mov 40(%rsp),%rax
mov %rax,8(%rsp)
mov 32(%rsp),%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
mov pop_book@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 32(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
add $8,%rsp
add $24,%rsp
ret
.section .text.logic
logic:
push %rdi
push %rsi
push %rdx
push %rcx
mov flake@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov xcaret@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 40(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
push %rax
mov cz@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov xout@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 48(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov 24(%rsp),%rax
add $-16,%rsp
push %rax
mov xout@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 56(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
mov 24(%rsp),%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
mov 32(%rsp),%rax
add $-16,%rsp
push %rax
mov 40(%rsp),%rax
mov %rax,8(%rsp)
mov 32(%rsp),%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
mov label@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov xout@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 56(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
mov 24(%rsp),%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
mov $1,%rax
add $8,%rsp
add $32,%rsp
ret
.section .text.pop
pop:
push %rdi
push %rsi
mov pushpop@GOTPCREL(%rip),%rax
add $-32,%rsp
push %rax
mov 48(%rsp),%rax
mov %rax,8(%rsp)
mov 40(%rsp),%rax
mov %rax,16(%rsp)
.section .text..s48200002100
.s48200002100:.string "pop"
.previous
mov .s48200002100@GOTPCREL(%rip),%rax
mov %rax,24(%rsp)
mov add@GOTPCREL(%rip),%rax
mov %rax,32(%rsp)
pop %rax
pop %rdi
pop %rsi
pop %rdx
pop %rcx
call *%rax
add $16,%rsp
ret
.section .text.push
push:
push %rdi
push %rsi
mov pushpop@GOTPCREL(%rip),%rax
add $-32,%rsp
push %rax
mov 48(%rsp),%rax
mov %rax,8(%rsp)
mov 40(%rsp),%rax
mov %rax,16(%rsp)
.section .text..s48500002200
.s48500002200:.string "push"
.previous
mov .s48500002200@GOTPCREL(%rip),%rax
mov %rax,24(%rsp)
mov sub@GOTPCREL(%rip),%rax
mov %rax,32(%rsp)
pop %rax
pop %rdi
pop %rsi
pop %rdx
pop %rcx
call *%rax
add $16,%rsp
ret
.section .text.gen_addr
gen_addr:
push %rdi
push %rsi
push %rdx
mov put_string@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov xout@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 48(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
.section .text..s48900000100
.s48900000100:.string "lea "
.previous
mov .s48900000100@GOTPCREL(%rip),%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
mov put_number@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov xout@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 48(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
mov shl@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov $3,%rax
mov %rax,8(%rsp)
mov stack_offset@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov 80(%rsp),%rax
mov %rax,8(%rsp)
mov lookup@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 96(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
mov put_string@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov xout@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 48(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
.section .text..s49100000100
.s49100000100:.string "(%rsp),%rax\n"
.previous
mov .s49100000100@GOTPCREL(%rip),%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
mov store@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov xtype@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 48(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
mov load@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov xscalar@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 64(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
mov next@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov xcaret@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 40(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
add $24,%rsp
ret
.section .text.gen_do
gen_do:
push %rdi
push %rsi
push %rdx
mov 16(%rsp),%rax
add $-16,%rsp
push %rax
mov 32(%rsp),%rax
mov %rax,8(%rsp)
mov $0,%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
mov 16(%rsp),%rax
add $-16,%rsp
push %rax
mov 32(%rsp),%rax
mov %rax,8(%rsp)
mov 24(%rsp),%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
add $24,%rsp
ret
.section .text.gen_let
gen_let:
push %rdi
push %rsi
push %rdx
mov 16(%rsp),%rax
add $-16,%rsp
push %rax
mov 32(%rsp),%rax
mov %rax,8(%rsp)
mov $0,%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
mov push@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov 32(%rsp),%rax
mov %rax,8(%rsp)
.section .text..s50100000100
.s50100000100:.string "%rax"
.previous
mov .s50100000100@GOTPCREL(%rip),%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
mov letvar@GOTPCREL(%rip),%rax
add $-24,%rsp
push %rax
mov 48(%rsp),%rax
mov %rax,8(%rsp)
mov 40(%rsp),%rax
mov %rax,16(%rsp)
mov 32(%rsp),%rax
mov %rax,24(%rsp)
pop %rax
pop %rdi
pop %rsi
pop %rdx
call *%rax
mov fpop@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov 32(%rsp),%rax
mov %rax,8(%rsp)
mov $1,%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
add $24,%rsp
ret
.section .text.gen_for
gen_for:
push %rdi
push %rsi
push %rdx
mov flake@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov xcaret@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 40(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
push %rax
mov add@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov $1,%rax
mov %rax,8(%rsp)
mov 24(%rsp),%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
push %rax
mov 32(%rsp),%rax
add $-16,%rsp
push %rax
mov 48(%rsp),%rax
mov %rax,8(%rsp)
mov 40(%rsp),%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
mov push@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov 48(%rsp),%rax
mov %rax,8(%rsp)
.section .text..s50900000100
.s50900000100:.string "%rax"
.previous
mov .s50900000100@GOTPCREL(%rip),%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
mov jmp@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov xout@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 64(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
mov 24(%rsp),%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
mov label@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov xout@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 64(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
mov 32(%rsp),%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
mov mnem2@GOTPCREL(%rip),%rax
add $-32,%rsp
push %rax
mov xout@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 80(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
.section .text..s51100002400
.s51100002400:.string "mov"
.previous
mov .s51100002400@GOTPCREL(%rip),%rax
mov %rax,16(%rsp)
.section .text..s51100003100
.s51100003100:.string "%rax"
.previous
mov .s51100003100@GOTPCREL(%rip),%rax
mov %rax,24(%rsp)
.section .text..s51200000100
.s51200000100:.string "(%rsp)"
.previous
mov .s51200000100@GOTPCREL(%rip),%rax
mov %rax,32(%rsp)
pop %rax
pop %rdi
pop %rsi
pop %rdx
pop %rcx
call *%rax
mov label@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov xout@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 64(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
mov 24(%rsp),%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
mov letvar@GOTPCREL(%rip),%rax
add $-24,%rsp
push %rax
mov 64(%rsp),%rax
mov %rax,8(%rsp)
mov 56(%rsp),%rax
mov %rax,16(%rsp)
mov 48(%rsp),%rax
mov %rax,24(%rsp)
pop %rax
pop %rdi
pop %rsi
pop %rdx
call *%rax
mov cz@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov xout@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 56(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov jne@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov xout@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 64(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
mov 32(%rsp),%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
mov pop@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov 48(%rsp),%rax
mov %rax,8(%rsp)
.section .text..s51700000100
.s51700000100:.string "%rax"
.previous
mov .s51700000100@GOTPCREL(%rip),%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
add $8,%rsp
add $8,%rsp
add $24,%rsp
ret
.section .text.gen_and
gen_and:
push %rdi
push %rsi
push %rdx
mov 16(%rsp),%rax
add $-16,%rsp
push %rax
mov 32(%rsp),%rax
mov %rax,8(%rsp)
mov $0,%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
mov logic@GOTPCREL(%rip),%rax
add $-32,%rsp
push %rax
mov 56(%rsp),%rax
mov %rax,8(%rsp)
mov je@GOTPCREL(%rip),%rax
mov %rax,16(%rsp)
mov 48(%rsp),%rax
mov %rax,24(%rsp)
mov 40(%rsp),%rax
mov %rax,32(%rsp)
pop %rax
pop %rdi
pop %rsi
pop %rdx
pop %rcx
call *%rax
add $24,%rsp
ret
.section .text.gen_or
gen_or:
push %rdi
push %rsi
push %rdx
mov 16(%rsp),%rax
add $-16,%rsp
push %rax
mov 32(%rsp),%rax
mov %rax,8(%rsp)
mov 24(%rsp),%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
mov load@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov xtype@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 40(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
push %rax
mov logic@GOTPCREL(%rip),%rax
add $-32,%rsp
push %rax
mov 64(%rsp),%rax
mov %rax,8(%rsp)
mov jne@GOTPCREL(%rip),%rax
mov %rax,16(%rsp)
mov 56(%rsp),%rax
mov %rax,24(%rsp)
mov 48(%rsp),%rax
mov %rax,32(%rsp)
pop %rax
pop %rdi
pop %rsi
pop %rdx
pop %rcx
call *%rax
mov store@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov xtype@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 56(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
mov 24(%rsp),%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
add $8,%rsp
add $24,%rsp
ret
.section .text.gen_if
gen_if:
push %rdi
push %rsi
push %rdx
mov flake@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov xcaret@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 40(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
push %rax
mov add@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov $1,%rax
mov %rax,8(%rsp)
mov 24(%rsp),%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
push %rax
mov 32(%rsp),%rax
add $-16,%rsp
push %rax
mov 48(%rsp),%rax
mov %rax,8(%rsp)
mov $0,%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
mov cz@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov xout@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 56(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov je@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov xout@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 64(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
mov 32(%rsp),%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
mov 32(%rsp),%rax
add $-16,%rsp
push %rax
mov 48(%rsp),%rax
mov %rax,8(%rsp)
mov 40(%rsp),%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
mov jmp@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov xout@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 64(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
mov 24(%rsp),%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
mov label@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov xout@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 64(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
mov 32(%rsp),%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
mov load@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov xtype@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 56(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
push %rax
mov 40(%rsp),%rax
add $-16,%rsp
push %rax
mov 56(%rsp),%rax
mov %rax,8(%rsp)
mov 48(%rsp),%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
mov label@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov xout@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 72(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
mov 32(%rsp),%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
add $8,%rsp
add $8,%rsp
add $8,%rsp
add $24,%rsp
ret
.section .text.gen_lit
gen_lit:
push %rdi
push %rsi
push %rdx
mov put_string@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov xout@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 48(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
.section .text..s54300000100
.s54300000100:.string "mov $"
.previous
mov .s54300000100@GOTPCREL(%rip),%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
mov verbatim@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov xout@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 48(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
mov xcaret@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 48(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
mov put_string@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov xout@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 48(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
.section .text..s54500000100
.s54500000100:.string ",%rax\n"
.previous
mov .s54500000100@GOTPCREL(%rip),%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
mov next@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov xcaret@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 40(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov store@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov xtype@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 48(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
mov load@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov xscalar@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 64(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
add $24,%rsp
ret
.section .text.gen_str
gen_str:
push %rdi
push %rsi
push %rdx
mov str_section@GOTPCREL(%rip),%rax
add $-24,%rsp
push %rax
mov xout@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 56(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
mov flake@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov xcaret@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 72(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,16(%rsp)
mov xcaret@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 56(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,24(%rsp)
pop %rax
pop %rdi
pop %rsi
pop %rdx
call *%rax
mov str_load@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov xout@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 48(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
mov flake@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov xcaret@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 64(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
mov next@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov xcaret@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 40(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov store@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov xtype@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 48(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
mov load@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov xscalar@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 64(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
add $24,%rsp
ret
.section .text.gen_id
gen_id:
push %rdi
push %rsi
push %rdx
mov lookup@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 24(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
push %rax
mov put_string@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov xout@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 56(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
.section .text..s55700000100
.s55700000100:.string "mov "
.previous
mov .s55700000100@GOTPCREL(%rip),%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
mov load@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov oisvar@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 32(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
test %rax,%rax
je l55700001400$
mov put_number@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov xout@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 56(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
mov shl@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov $3,%rax
mov %rax,8(%rsp)
mov stack_offset@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov 88(%rsp),%rax
mov %rax,8(%rsp)
mov 72(%rsp),%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
mov put_string@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov xout@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 56(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
.section .text..s56000000100
.s56000000100:.string "(%rsp),%rax\n"
.previous
mov .s56000000100@GOTPCREL(%rip),%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
jmp l55700001401$
l55700001400$:
mov verbatim@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov xout@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 56(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
mov xcaret@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 56(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
mov load_rip@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov xout@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 48(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
l55700001401$:
mov store@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov xtype@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 56(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
mov load@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov otype@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 56(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
mov next@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov xcaret@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 48(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
add $8,%rsp
add $24,%rsp
ret
.section .text.argreg
argreg:
push %rdi
mov cmpe@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov 24(%rsp),%rax
mov %rax,8(%rsp)
mov $0,%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
test %rax,%rax
je l56900000100$
.section .text..s56900000100
.s56900000100:.string "%rdi"
.previous
mov .s56900000100@GOTPCREL(%rip),%rax
l56900000100$:
test %rax,%rax
jne l56900000400$
mov cmpe@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov 24(%rsp),%rax
mov %rax,8(%rsp)
mov $1,%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
test %rax,%rax
je l57000000100$
.section .text..s57000000100
.s57000000100:.string "%rsi"
.previous
mov .s57000000100@GOTPCREL(%rip),%rax
l57000000100$:
test %rax,%rax
jne l57000000400$
mov cmpe@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov 24(%rsp),%rax
mov %rax,8(%rsp)
mov $2,%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
test %rax,%rax
je l57100000100$
.section .text..s57100000100
.s57100000100:.string "%rdx"
.previous
mov .s57100000100@GOTPCREL(%rip),%rax
l57100000100$:
test %rax,%rax
jne l57100000400$
mov cmpe@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov 24(%rsp),%rax
mov %rax,8(%rsp)
mov $3,%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
test %rax,%rax
je l57200000100$
.section .text..s57200000100
.s57200000100:.string "%rcx"
.previous
mov .s57200000100@GOTPCREL(%rip),%rax
l57200000100$:
test %rax,%rax
jne l57200000400$
mov cmpe@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov 24(%rsp),%rax
mov %rax,8(%rsp)
mov $4,%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
test %rax,%rax
je l57300000100$
.section .text..s57300000100
.s57300000100:.string "%r8"
.previous
mov .s57300000100@GOTPCREL(%rip),%rax
l57300000100$:
test %rax,%rax
jne l57400000100$
.section .text..s57400000100
.s57400000100:.string "%r9"
.previous
mov .s57400000100@GOTPCREL(%rip),%rax
l57400000100$:
l57200000400$:
l57100000400$:
l57000000400$:
l56900000400$:
add $8,%rsp
ret
.section .text.gen_arg
gen_arg:
push %rdi
push %rsi
mov put_string@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov xout@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 48(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
.section .text..s57700000100
.s57700000100:.string "mov %rax,"
.previous
mov .s57700000100@GOTPCREL(%rip),%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
mov put_number@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov xout@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 48(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
mov shl@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov $3,%rax
mov %rax,8(%rsp)
mov load@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 64(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
mov put_string@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov xout@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 48(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
.section .text..s57900000100
.s57900000100:.string "(%rsp)\n"
.previous
mov .s57900000100@GOTPCREL(%rip),%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
mov store@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov 24(%rsp),%rax
mov %rax,8(%rsp)
mov add@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov $1,%rax
mov %rax,8(%rsp)
mov load@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 64(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
add $16,%rsp
ret
.section .text.gen_argreg
gen_argreg:
push %rdi
push %rsi
mov pop@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov 32(%rsp),%rax
mov %rax,8(%rsp)
mov argreg@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 40(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
add $16,%rsp
ret
.section .text.gen_args
gen_args:
push %rdi
push %rsi
push %rdx
mov $1,%rax
push %rax
mov 8(%rsp),%rax
test %rax,%rax
je l58900000500$
mov 8(%rsp),%rax
push %rax
jmp l58900001601$
l58900001600$:
mov %rax,(%rsp)
l58900001601$:
mov 32(%rsp),%rax
add $-16,%rsp
push %rax
mov 48(%rsp),%rax
mov %rax,8(%rsp)
mov 24(%rsp),%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
mov type_equal@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov 24(%rsp),%rax
mov %rax,8(%rsp)
mov load@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov xtype@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 80(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
test %rax,%rax
jne l59300001400$
mov exit@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov $12,%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
l59300001400$:
mov gen_arg@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov 48(%rsp),%rax
mov %rax,8(%rsp)
lea 32(%rsp),%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
mov load@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 16(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
test %rax,%rax
jne l58900001600$
pop %rax
l58900000500$:
add $8,%rsp
add $24,%rsp
ret
.section .text.gen_call
gen_call:
push %rdi
push %rsi
push %rdx
push %rcx
mov fpush@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov 40(%rsp),%rax
mov %rax,8(%rsp)
mov 24(%rsp),%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
mov push@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov 40(%rsp),%rax
mov %rax,8(%rsp)
.section .text..s60000000100
.s60000000100:.string "%rax"
.previous
mov .s60000000100@GOTPCREL(%rip),%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
mov gen_args@GOTPCREL(%rip),%rax
add $-24,%rsp
push %rax
mov 56(%rsp),%rax
mov %rax,8(%rsp)
mov 48(%rsp),%rax
mov %rax,16(%rsp)
mov 40(%rsp),%rax
mov %rax,24(%rsp)
pop %rax
pop %rdi
pop %rsi
pop %rdx
call *%rax
mov pop@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov 40(%rsp),%rax
mov %rax,8(%rsp)
.section .text..s60200000100
.s60200000100:.string "%rax"
.previous
mov .s60200000100@GOTPCREL(%rip),%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
add $32,%rsp
ret
.section .text.parse_param
parse_param:
push %rdi
push %rsi
mov store@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov 24(%rsp),%rax
mov %rax,8(%rsp)
mov alloc@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov xbrk@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 72(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
mov tsize@GOTPCREL(%rip),%rax
push %rax
pop %rax
call *%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
mov store@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov tcaret@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov load@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 56(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
mov load@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov xcaret@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 64(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
mov store@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov klength@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov tcaret@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov load@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 72(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
mov load@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov klength@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov xcaret@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 80(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
mov next@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov xcaret@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 40(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov parse_type@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 24(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
push %rax
mov store@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov targ@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov load@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 64(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
mov load@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov targ@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 56(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
mov store@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov tkind@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov load@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 64(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
mov load@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov tkind@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 56(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
add $8,%rsp
add $16,%rsp
ret
.section .text.parse_type
parse_type:
push %rdi
mov eat@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov xcaret@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 40(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
.section .text..s62800000100
.s62800000100:.string "("
.previous
mov .s62800000100@GOTPCREL(%rip),%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
test %rax,%rax
je l62700000900$
mov new_type@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov 24(%rsp),%rax
mov %rax,8(%rsp)
mov $1,%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
push %rax
mov targ@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 16(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
push %rax
jmp l62900001801$
l62900001800$:
mov %rax,(%rsp)
l62900001801$:
mov not@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov eat@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov xcaret@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 72(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
.section .text..s63100000100
.s63100000100:.string ")"
.previous
mov .s63100000100@GOTPCREL(%rip),%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
test %rax,%rax
je l63100001200$
mov parse_param@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov 40(%rsp),%rax
mov %rax,8(%rsp)
mov 24(%rsp),%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
mov load@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 16(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
l63100001200$:
test %rax,%rax
jne l62900001800$
pop %rax
mov 0(%rsp),%rax
add $8,%rsp
jmp l62700000901$
l62700000900$:
mov load@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov xscalar@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 32(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
l62700000901$:
add $8,%rsp
ret
.section .text.kind_expr
kind_expr:
push %rdi
push %rsi
push %rdx
push %rcx
push %r8
mov eat@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov xcaret@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 48(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
mov 56(%rsp),%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
test %rax,%rax
je l63900002400$
mov 24(%rsp),%rax
add $-24,%rsp
push %rax
mov 48(%rsp),%rax
mov %rax,8(%rsp)
mov 40(%rsp),%rax
mov %rax,16(%rsp)
mov 32(%rsp),%rax
mov %rax,24(%rsp)
pop %rax
pop %rdi
pop %rsi
pop %rdx
call *%rax
l63900002400$:
add $40,%rsp
ret
.section .text.parse_primary
parse_primary:
push %rdi
push %rsi
push %rdx
mov parse_nest@GOTPCREL(%rip),%rax
add $-24,%rsp
push %rax
mov 48(%rsp),%rax
mov %rax,8(%rsp)
mov 40(%rsp),%rax
mov %rax,16(%rsp)
mov 32(%rsp),%rax
mov %rax,24(%rsp)
pop %rax
pop %rdi
pop %rsi
pop %rdx
call *%rax
test %rax,%rax
jne l64300000400$
mov kind_expr@GOTPCREL(%rip),%rax
add $-40,%rsp
push %rax
.section .text..s64300002200
.s64300002200:.string "addr"
.previous
mov .s64300002200@GOTPCREL(%rip),%rax
mov %rax,8(%rsp)
mov gen_addr@GOTPCREL(%rip),%rax
mov %rax,16(%rsp)
mov 64(%rsp),%rax
mov %rax,24(%rsp)
mov 56(%rsp),%rax
mov %rax,32(%rsp)
mov 48(%rsp),%rax
mov %rax,40(%rsp)
pop %rax
pop %rdi
pop %rsi
pop %rdx
pop %rcx
pop %r8
call *%rax
test %rax,%rax
jne l64400000400$
mov kind_expr@GOTPCREL(%rip),%rax
add $-40,%rsp
push %rax
.section .text..s64400002000
.s64400002000:.string "do"
.previous
mov .s64400002000@GOTPCREL(%rip),%rax
mov %rax,8(%rsp)
mov gen_do@GOTPCREL(%rip),%rax
mov %rax,16(%rsp)
mov 64(%rsp),%rax
mov %rax,24(%rsp)
mov 56(%rsp),%rax
mov %rax,32(%rsp)
mov 48(%rsp),%rax
mov %rax,40(%rsp)
pop %rax
pop %rdi
pop %rsi
pop %rdx
pop %rcx
pop %r8
call *%rax
test %rax,%rax
jne l64500000400$
mov kind_expr@GOTPCREL(%rip),%rax
add $-40,%rsp
push %rax
.section .text..s64500002100
.s64500002100:.string "let"
.previous
mov .s64500002100@GOTPCREL(%rip),%rax
mov %rax,8(%rsp)
mov gen_let@GOTPCREL(%rip),%rax
mov %rax,16(%rsp)
mov 64(%rsp),%rax
mov %rax,24(%rsp)
mov 56(%rsp),%rax
mov %rax,32(%rsp)
mov 48(%rsp),%rax
mov %rax,40(%rsp)
pop %rax
pop %rdi
pop %rsi
pop %rdx
pop %rcx
pop %r8
call *%rax
test %rax,%rax
jne l64600000400$
mov kind_expr@GOTPCREL(%rip),%rax
add $-40,%rsp
push %rax
.section .text..s64600002100
.s64600002100:.string "for"
.previous
mov .s64600002100@GOTPCREL(%rip),%rax
mov %rax,8(%rsp)
mov gen_for@GOTPCREL(%rip),%rax
mov %rax,16(%rsp)
mov 64(%rsp),%rax
mov %rax,24(%rsp)
mov 56(%rsp),%rax
mov %rax,32(%rsp)
mov 48(%rsp),%rax
mov %rax,40(%rsp)
pop %rax
pop %rdi
pop %rsi
pop %rdx
pop %rcx
pop %r8
call *%rax
test %rax,%rax
jne l64700000400$
mov kind_expr@GOTPCREL(%rip),%rax
add $-40,%rsp
push %rax
.section .text..s64700002100
.s64700002100:.string "and"
.previous
mov .s64700002100@GOTPCREL(%rip),%rax
mov %rax,8(%rsp)
mov gen_and@GOTPCREL(%rip),%rax
mov %rax,16(%rsp)
mov 64(%rsp),%rax
mov %rax,24(%rsp)
mov 56(%rsp),%rax
mov %rax,32(%rsp)
mov 48(%rsp),%rax
mov %rax,40(%rsp)
pop %rax
pop %rdi
pop %rsi
pop %rdx
pop %rcx
pop %r8
call *%rax
test %rax,%rax
jne l64800000400$
mov kind_expr@GOTPCREL(%rip),%rax
add $-40,%rsp
push %rax
.section .text..s64800002000
.s64800002000:.string "or"
.previous
mov .s64800002000@GOTPCREL(%rip),%rax
mov %rax,8(%rsp)
mov gen_or@GOTPCREL(%rip),%rax
mov %rax,16(%rsp)
mov 64(%rsp),%rax
mov %rax,24(%rsp)
mov 56(%rsp),%rax
mov %rax,32(%rsp)
mov 48(%rsp),%rax
mov %rax,40(%rsp)
pop %rax
pop %rdi
pop %rsi
pop %rdx
pop %rcx
pop %r8
call *%rax
test %rax,%rax
jne l64900000400$
mov kind_expr@GOTPCREL(%rip),%rax
add $-40,%rsp
push %rax
.section .text..s64900002000
.s64900002000:.string "if"
.previous
mov .s64900002000@GOTPCREL(%rip),%rax
mov %rax,8(%rsp)
mov gen_if@GOTPCREL(%rip),%rax
mov %rax,16(%rsp)
mov 64(%rsp),%rax
mov %rax,24(%rsp)
mov 56(%rsp),%rax
mov %rax,32(%rsp)
mov 48(%rsp),%rax
mov %rax,40(%rsp)
pop %rax
pop %rdi
pop %rsi
pop %rdx
pop %rcx
pop %r8
call *%rax
test %rax,%rax
jne l65000000400$
mov have_lit@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov xcaret@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 40(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
test %rax,%rax
je l65000003600$
mov gen_lit@GOTPCREL(%rip),%rax
add $-24,%rsp
push %rax
mov 48(%rsp),%rax
mov %rax,8(%rsp)
mov 40(%rsp),%rax
mov %rax,16(%rsp)
mov 32(%rsp),%rax
mov %rax,24(%rsp)
pop %rax
pop %rdi
pop %rsi
pop %rdx
call *%rax
l65000003600$:
test %rax,%rax
jne l65100000400$
mov have_str@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov xcaret@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 40(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
test %rax,%rax
je l65100003600$
mov gen_str@GOTPCREL(%rip),%rax
add $-24,%rsp
push %rax
mov 48(%rsp),%rax
mov %rax,8(%rsp)
mov 40(%rsp),%rax
mov %rax,16(%rsp)
mov 32(%rsp),%rax
mov %rax,24(%rsp)
pop %rax
pop %rdi
pop %rsi
pop %rdx
call *%rax
l65100003600$:
test %rax,%rax
jne l65200000400$
mov have_id@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov xcaret@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 40(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
test %rax,%rax
je l65200003500$
mov gen_id@GOTPCREL(%rip),%rax
add $-24,%rsp
push %rax
mov 48(%rsp),%rax
mov %rax,8(%rsp)
mov 40(%rsp),%rax
mov %rax,16(%rsp)
mov 32(%rsp),%rax
mov %rax,24(%rsp)
pop %rax
pop %rdi
pop %rsi
pop %rdx
call *%rax
l65200003500$:
test %rax,%rax
jne l65400001000$
mov exit@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov $11,%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
l65400001000$:
l65200000400$:
l65100000400$:
l65000000400$:
l64900000400$:
l64800000400$:
l64700000400$:
l64600000400$:
l64500000400$:
l64400000400$:
l64300000400$:
add $24,%rsp
ret
.section .text.parse_call
parse_call:
push %rdi
push %rsi
push %rdx
mov have@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov xcaret@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 48(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
.section .text..s65700002300
.s65700002300:.string ")"
.previous
mov .s65700002300@GOTPCREL(%rip),%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
test %rax,%rax
jne l65800000400$
mov 0(%rsp),%rax
test %rax,%rax
je l65800002200$
mov type_equal@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov 24(%rsp),%rax
mov %rax,8(%rsp)
mov load@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov xtype@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 64(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
l65800002200$:
test %rax,%rax
jne l65900000500$
mov $1,%rax
push %rax
jmp l65900000701$
l65900000700$:
mov %rax,(%rsp)
l65900000701$:
mov load@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov tkind@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov load@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov xtype@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 80(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
test %rax,%rax
je l66100000500$
mov load@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov xdepth@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 48(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
push %rax
mov load@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov xtype@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 56(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
push %rax
mov load@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov targ@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 32(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
push %rax
mov type_arity@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 16(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
push %rax
mov gen_call@GOTPCREL(%rip),%rax
add $-32,%rsp
push %rax
mov 96(%rsp),%rax
mov %rax,8(%rsp)
mov 88(%rsp),%rax
mov %rax,16(%rsp)
mov 48(%rsp),%rax
mov %rax,24(%rsp)
mov 40(%rsp),%rax
mov %rax,32(%rsp)
pop %rax
pop %rdi
pop %rsi
pop %rdx
pop %rcx
call *%rax
mov cmpa@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov 24(%rsp),%rax
mov %rax,8(%rsp)
mov $6,%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
test %rax,%rax
je l66600001700$
mov 0(%rsp),%rax
jmp l66600001701$
l66600001700$:
mov $6,%rax
l66600001701$:
push %rax
mov $0,%rax
push %rax
jmp l66700001101$
l66700001100$:
mov %rax,(%rsp)
l66700001101$:
mov cmpa@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov 24(%rsp),%rax
mov %rax,8(%rsp)
mov 32(%rsp),%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
test %rax,%rax
je l66900000800$
mov gen_argreg@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov 88(%rsp),%rax
mov %rax,8(%rsp)
mov 24(%rsp),%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
mov add@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov $1,%rax
mov %rax,8(%rsp)
mov 24(%rsp),%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
l66900000800$:
test %rax,%rax
jne l66700001100$
pop %rax
add $8,%rsp
mov mnem1@GOTPCREL(%rip),%rax
add $-24,%rsp
push %rax
mov xout@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 96(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
.section .text..s67100002500
.s67100002500:.string "call"
.previous
mov .s67100002500@GOTPCREL(%rip),%rax
mov %rax,16(%rsp)
.section .text..s67200000100
.s67200000100:.string "*%rax"
.previous
mov .s67200000100@GOTPCREL(%rip),%rax
mov %rax,24(%rsp)
pop %rax
pop %rdi
pop %rsi
pop %rdx
call *%rax
mov fpop@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov 72(%rsp),%rax
mov %rax,8(%rsp)
mov sub@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov load@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov xdepth@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 128(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
mov 72(%rsp),%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
mov store@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov xtype@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 88(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
mov load@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov xscalar@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 104(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
mov $1,%rax
add $8,%rsp
add $8,%rsp
add $8,%rsp
add $8,%rsp
l66100000500$:
test %rax,%rax
jne l65900000700$
pop %rax
l65900000500$:
l65800000400$:
add $24,%rsp
ret
.section .text.parse_expr
parse_expr:
push %rdi
push %rsi
push %rdx
mov parse_primary@GOTPCREL(%rip),%rax
add $-24,%rsp
push %rax
mov 48(%rsp),%rax
mov %rax,8(%rsp)
mov 40(%rsp),%rax
mov %rax,16(%rsp)
mov 32(%rsp),%rax
mov %rax,24(%rsp)
pop %rax
pop %rdi
pop %rsi
pop %rdx
call *%rax
mov parse_call@GOTPCREL(%rip),%rax
add $-24,%rsp
push %rax
mov 48(%rsp),%rax
mov %rax,8(%rsp)
mov 40(%rsp),%rax
mov %rax,16(%rsp)
mov 32(%rsp),%rax
mov %rax,24(%rsp)
pop %rax
pop %rdi
pop %rsi
pop %rdx
call *%rax
add $24,%rsp
ret
.section .text.parse_nest
parse_nest:
push %rdi
push %rsi
push %rdx
mov eat@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov xcaret@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 48(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
.section .text..s68100002200
.s68100002200:.string "("
.previous
mov .s68100002200@GOTPCREL(%rip),%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
test %rax,%rax
je l68100002500$
mov parse_expr@GOTPCREL(%rip),%rax
add $-24,%rsp
push %rax
mov 48(%rsp),%rax
mov %rax,8(%rsp)
mov 40(%rsp),%rax
mov %rax,16(%rsp)
mov 32(%rsp),%rax
mov %rax,24(%rsp)
pop %rax
pop %rdi
pop %rsi
pop %rdx
call *%rax
mov eat@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov xcaret@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 48(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
.section .text..s68200000100
.s68200000100:.string ")"
.previous
mov .s68200000100@GOTPCREL(%rip),%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
l68100002500$:
add $24,%rsp
ret
.section .text.parse_arg
parse_arg:
push %rdi
push %rsi
mov parse_nest@GOTPCREL(%rip),%rax
add $-24,%rsp
push %rax
mov parse_arg@GOTPCREL(%rip),%rax
mov %rax,8(%rsp)
mov 40(%rsp),%rax
mov %rax,16(%rsp)
mov 32(%rsp),%rax
mov %rax,24(%rsp)
pop %rax
pop %rdi
pop %rsi
pop %rdx
call *%rax
test %rax,%rax
jne l68500001500$
mov parse_expr@GOTPCREL(%rip),%rax
add $-24,%rsp
push %rax
mov parse_arg@GOTPCREL(%rip),%rax
mov %rax,8(%rsp)
mov 40(%rsp),%rax
mov %rax,16(%rsp)
mov 32(%rsp),%rax
mov %rax,24(%rsp)
pop %rax
pop %rdi
pop %rsi
pop %rdx
call *%rax
l68500001500$:
add $16,%rsp
ret
.section .text.params
params:
push %rdi
push %rsi
push %rdx
push %rcx
mov 8(%rsp),%rax
test %rax,%rax
je l68700004100$
mov 24(%rsp),%rax
add $-24,%rsp
push %rax
mov 48(%rsp),%rax
mov %rax,8(%rsp)
mov 40(%rsp),%rax
mov %rax,16(%rsp)
mov 32(%rsp),%rax
mov %rax,24(%rsp)
pop %rax
pop %rdi
pop %rsi
pop %rdx
call *%rax
jmp l68700004101$
l68700004100$:
mov parse_arg@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov 40(%rsp),%rax
mov %rax,8(%rsp)
mov $0,%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
mov $0,%rax
l68700004101$:
add $32,%rsp
ret
.section .text.params_next
params_next:
push %rdi
push %rsi
push %rdx
push %rcx
mov params@GOTPCREL(%rip),%rax
add $-32,%rsp
push %rax
mov 64(%rsp),%rax
mov %rax,8(%rsp)
mov 56(%rsp),%rax
mov %rax,16(%rsp)
mov load@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 64(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,24(%rsp)
mov 40(%rsp),%rax
mov %rax,32(%rsp)
pop %rax
pop %rdi
pop %rsi
pop %rdx
pop %rcx
call *%rax
push %rax
mov pop_book@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 40(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov 0(%rsp),%rax
add $8,%rsp
add $32,%rsp
ret
.section .text.register_then
register_then:
push %rdi
push %rsi
push %rdx
push %rcx
push %r8
mov push@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov 48(%rsp),%rax
mov %rax,8(%rsp)
mov 32(%rsp),%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
mov push_book@GOTPCREL(%rip),%rax
add $-24,%rsp
push %rax
mov book_param@GOTPCREL(%rip),%rax
mov %rax,8(%rsp)
mov 56(%rsp),%rax
mov %rax,16(%rsp)
mov 48(%rsp),%rax
mov %rax,24(%rsp)
pop %rax
pop %rdi
pop %rsi
pop %rdx
call *%rax
mov add@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov $1,%rax
mov %rax,8(%rsp)
mov params_next@GOTPCREL(%rip),%rax
add $-32,%rsp
push %rax
mov 96(%rsp),%rax
mov %rax,8(%rsp)
mov 88(%rsp),%rax
mov %rax,16(%rsp)
mov 80(%rsp),%rax
mov %rax,24(%rsp)
mov 64(%rsp),%rax
mov %rax,32(%rsp)
pop %rax
pop %rdi
pop %rsi
pop %rdx
pop %rcx
call *%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
add $40,%rsp
ret
.section .text.a_register
a_register:
push %rdi
push %rsi
push %rdx
push %rcx
push %r8
mov register_then@GOTPCREL(%rip),%rax
add $-40,%rsp
push %rax
mov 80(%rsp),%rax
mov %rax,8(%rsp)
mov 72(%rsp),%rax
mov %rax,16(%rsp)
mov 64(%rsp),%rax
mov %rax,24(%rsp)
mov 56(%rsp),%rax
mov %rax,32(%rsp)
mov add@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov $1,%rax
mov %rax,8(%rsp)
mov 72(%rsp),%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
mov %rax,40(%rsp)
pop %rax
pop %rdi
pop %rsi
pop %rdx
pop %rcx
pop %r8
call *%rax
add $40,%rsp
ret
.section .text.stack
stack:
push %rdi
push %rsi
push %rdx
mov push_book@GOTPCREL(%rip),%rax
add $-24,%rsp
push %rax
mov book_param@GOTPCREL(%rip),%rax
mov %rax,8(%rsp)
mov 48(%rsp),%rax
mov %rax,16(%rsp)
mov 40(%rsp),%rax
mov %rax,24(%rsp)
pop %rax
pop %rdi
pop %rsi
pop %rdx
call *%rax
push %rax
mov store@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov odepth@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 40(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
mov 32(%rsp),%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
add $8,%rsp
mov params_next@GOTPCREL(%rip),%rax
add $-32,%rsp
push %rax
mov stack@GOTPCREL(%rip),%rax
mov %rax,8(%rsp)
mov 56(%rsp),%rax
mov %rax,16(%rsp)
mov 48(%rsp),%rax
mov %rax,24(%rsp)
mov add@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov $1,%rax
mov %rax,8(%rsp)
mov 64(%rsp),%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
mov %rax,32(%rsp)
pop %rax
pop %rdi
pop %rsi
pop %rdx
pop %rcx
call *%rax
add $24,%rsp
ret
.section .text.register5
register5:
push %rdi
push %rsi
push %rdx
mov register_then@GOTPCREL(%rip),%rax
add $-40,%rsp
push %rax
mov stack@GOTPCREL(%rip),%rax
mov %rax,8(%rsp)
mov 64(%rsp),%rax
mov %rax,16(%rsp)
mov 56(%rsp),%rax
mov %rax,24(%rsp)
.section .text..s69200004900
.s69200004900:.string "%r9"
.previous
mov .s69200004900@GOTPCREL(%rip),%rax
mov %rax,32(%rsp)
mov $1,%rax
mov %rax,40(%rsp)
pop %rax
pop %rdi
pop %rsi
pop %rdx
pop %rcx
pop %r8
call *%rax
add $24,%rsp
ret
.section .text.register4
register4:
push %rdi
push %rsi
push %rdx
mov a_register@GOTPCREL(%rip),%rax
add $-40,%rsp
push %rax
mov register5@GOTPCREL(%rip),%rax
mov %rax,8(%rsp)
mov 64(%rsp),%rax
mov %rax,16(%rsp)
mov 56(%rsp),%rax
mov %rax,24(%rsp)
.section .text..s69300005000
.s69300005000:.string "%r8"
.previous
mov .s69300005000@GOTPCREL(%rip),%rax
mov %rax,32(%rsp)
mov 48(%rsp),%rax
mov %rax,40(%rsp)
pop %rax
pop %rdi
pop %rsi
pop %rdx
pop %rcx
pop %r8
call *%rax
add $24,%rsp
ret
.section .text.register3
register3:
push %rdi
push %rsi
push %rdx
mov a_register@GOTPCREL(%rip),%rax
add $-40,%rsp
push %rax
mov register4@GOTPCREL(%rip),%rax
mov %rax,8(%rsp)
mov 64(%rsp),%rax
mov %rax,16(%rsp)
mov 56(%rsp),%rax
mov %rax,24(%rsp)
.section .text..s69400005100
.s69400005100:.string "%rcx"
.previous
mov .s69400005100@GOTPCREL(%rip),%rax
mov %rax,32(%rsp)
mov 48(%rsp),%rax
mov %rax,40(%rsp)
pop %rax
pop %rdi
pop %rsi
pop %rdx
pop %rcx
pop %r8
call *%rax
add $24,%rsp
ret
.section .text.register2
register2:
push %rdi
push %rsi
push %rdx
mov a_register@GOTPCREL(%rip),%rax
add $-40,%rsp
push %rax
mov register3@GOTPCREL(%rip),%rax
mov %rax,8(%rsp)
mov 64(%rsp),%rax
mov %rax,16(%rsp)
mov 56(%rsp),%rax
mov %rax,24(%rsp)
.section .text..s69500005100
.s69500005100:.string "%rdx"
.previous
mov .s69500005100@GOTPCREL(%rip),%rax
mov %rax,32(%rsp)
mov 48(%rsp),%rax
mov %rax,40(%rsp)
pop %rax
pop %rdi
pop %rsi
pop %rdx
pop %rcx
pop %r8
call *%rax
add $24,%rsp
ret
.section .text.register1
register1:
push %rdi
push %rsi
push %rdx
mov a_register@GOTPCREL(%rip),%rax
add $-40,%rsp
push %rax
mov register2@GOTPCREL(%rip),%rax
mov %rax,8(%rsp)
mov 64(%rsp),%rax
mov %rax,16(%rsp)
mov 56(%rsp),%rax
mov %rax,24(%rsp)
.section .text..s69600005100
.s69600005100:.string "%rsi"
.previous
mov .s69600005100@GOTPCREL(%rip),%rax
mov %rax,32(%rsp)
mov 48(%rsp),%rax
mov %rax,40(%rsp)
pop %rax
pop %rdi
pop %rsi
pop %rdx
pop %rcx
pop %r8
call *%rax
add $24,%rsp
ret
.section .text.register0
register0:
push %rdi
push %rsi
push %rdx
mov a_register@GOTPCREL(%rip),%rax
add $-40,%rsp
push %rax
mov register1@GOTPCREL(%rip),%rax
mov %rax,8(%rsp)
mov 64(%rsp),%rax
mov %rax,16(%rsp)
mov 56(%rsp),%rax
mov %rax,24(%rsp)
.section .text..s69700005100
.s69700005100:.string "%rdi"
.previous
mov .s69700005100@GOTPCREL(%rip),%rax
mov %rax,32(%rsp)
mov 48(%rsp),%rax
mov %rax,40(%rsp)
pop %rax
pop %rdi
pop %rsi
pop %rdx
pop %rcx
pop %r8
call *%rax
add $24,%rsp
ret
.section .text.parse_declaration
parse_declaration:
push %rdi
mov caret_byte@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov xcaret@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 32(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
test %rax,%rax
je l70100000400$
mov try_lookup@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 16(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
test %rax,%rax
jne l70100003500$
mov push_book@GOTPCREL(%rip),%rax
add $-24,%rsp
push %rax
mov book_fn@GOTPCREL(%rip),%rax
mov %rax,8(%rsp)
mov 32(%rsp),%rax
mov %rax,16(%rsp)
mov $0,%rax
mov %rax,24(%rsp)
pop %rax
pop %rdi
pop %rsi
pop %rdx
call *%rax
l70100003500$:
push %rax
mov not@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov load@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov oisdef@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 48(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
test %rax,%rax
jne l70400001500$
mov exit@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov $13,%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
l70400001500$:
mov parse_param@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov 32(%rsp),%rax
mov %rax,8(%rsp)
mov otype@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 40(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
mov store@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov oisdef@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 40(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
mov not@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov eat@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov xcaret@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 88(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
.section .text..s70700000100
.s70700000100:.string "?"
.previous
mov .s70700000100@GOTPCREL(%rip),%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
mov load@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov oisdef@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 32(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
test %rax,%rax
je l70800001200$
mov put_string@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov xout@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 48(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
.section .text..s70800004900
.s70800004900:.string ".section .text."
.previous
mov .s70800004900@GOTPCREL(%rip),%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
mov verbatim@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov xout@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 48(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
mov ocaret@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 40(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
mov put_byte@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov xout@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 48(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
mov $'\n,%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
mov verbatim@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov xout@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 48(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
mov ocaret@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 40(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
mov put_string@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov xout@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 48(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
.section .text..s71300000100
.s71300000100:.string ":\n"
.previous
mov .s71300000100@GOTPCREL(%rip),%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
mov store@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov xdepth@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 48(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
mov $0,%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
mov fpop@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov 32(%rsp),%rax
mov %rax,8(%rsp)
mov params@GOTPCREL(%rip),%rax
add $-32,%rsp
push %rax
mov register0@GOTPCREL(%rip),%rax
mov %rax,8(%rsp)
mov 72(%rsp),%rax
mov %rax,16(%rsp)
mov load@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov targ@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov load@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov otype@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 128(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,24(%rsp)
mov $0,%rax
mov %rax,32(%rsp)
pop %rax
pop %rdi
pop %rsi
pop %rdx
pop %rcx
call *%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
mov mnem0@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov xout@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 48(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
.section .text..s71600000100
.s71600000100:.string "ret"
.previous
mov .s71600000100@GOTPCREL(%rip),%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
l70800001200$:
add $8,%rsp
mov parse_declaration@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 16(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
l70100000400$:
add $8,%rsp
ret
.section .text.main
main:
push %rdi
mov mnem0@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov xout@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 40(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
.section .text..s72000000100
.s72000000100:.string ".globl _start"
.previous
mov .s72000000100@GOTPCREL(%rip),%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
mov ws@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov xcaret@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 32(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
test %rax,%rax
jne l72100000500$
mov load@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov kin@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov xcaret@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 48(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
push %rax
mov id@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov xcaret@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 40(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
test %rax,%rax
jne l72400001400$
mov exit@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov $5,%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
l72400001400$:
mov store@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov xcaret@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 48(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
mov 24(%rsp),%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
mov store@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov klength@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov xcaret@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 64(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
mov sub@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov 48(%rsp),%rax
mov %rax,8(%rsp)
mov load@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov kin@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov xcaret@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 104(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
mov parse_declaration@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 24(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
add $8,%rsp
l72100000500$:
add $8,%rsp
ret
.section .text.runtime
runtime:
push %rdi
push %rsi
push %rdx
mov initbrk@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 32(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
push %rax
mov store@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov 24(%rsp),%rax
mov %rax,8(%rsp)
mov $0,%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
mov store@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov xbrk@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 40(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
mov add@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov 48(%rsp),%rax
mov %rax,8(%rsp)
mov xsize@GOTPCREL(%rip),%rax
push %rax
pop %rax
call *%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
mov store@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov kin@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov xcaret@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 56(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
mov alloc@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov xbrk@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 64(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
mov 64(%rsp),%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
mov store@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov xout@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 40(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
mov alloc@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov xbrk@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 64(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
mov 56(%rsp),%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
mov store@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov kline_no@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov xcaret@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 56(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
mov $1,%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
mov store@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov kcol_no@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov xcaret@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 56(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
mov $1,%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
mov poke@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov retry@GOTPCREL(%rip),%rax
add $-24,%rsp
push %rax
mov stdin@GOTPCREL(%rip),%rax
mov %rax,8(%rsp)
mov load@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov kin@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov xcaret@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 104(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,16(%rsp)
mov add@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov load@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov kin@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov xcaret@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 128(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
mov 96(%rsp),%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
mov %rax,24(%rsp)
pop %rax
pop %rdi
pop %rsi
pop %rdx
call *%rax
mov %rax,8(%rsp)
mov $0,%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
mov store@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov xscalar@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 40(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
mov new_type@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov 48(%rsp),%rax
mov %rax,8(%rsp)
mov $0,%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
mov load@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov xout@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 32(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
push %rax
mov main@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 24(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov retry@GOTPCREL(%rip),%rax
add $-24,%rsp
push %rax
mov stdout@GOTPCREL(%rip),%rax
mov %rax,8(%rsp)
mov 32(%rsp),%rax
mov %rax,16(%rsp)
mov load@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov xout@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov 72(%rsp),%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
mov %rax,24(%rsp)
pop %rax
pop %rdi
pop %rsi
pop %rdx
call *%rax
mov exit@GOTPCREL(%rip),%rax
add $-8,%rsp
push %rax
mov $0,%rax
mov %rax,8(%rsp)
pop %rax
pop %rdi
call *%rax
add $8,%rsp
add $8,%rsp
add $24,%rsp
ret
.section .text._start
_start:
mov runtime@GOTPCREL(%rip),%rax
add $-24,%rsp
push %rax
mov shl@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov $24,%rax
mov %rax,8(%rsp)
mov $1,%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
mov %rax,8(%rsp)
mov shl@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov $20,%rax
mov %rax,8(%rsp)
mov $1,%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
mov %rax,16(%rsp)
mov shl@GOTPCREL(%rip),%rax
add $-16,%rsp
push %rax
mov $23,%rax
mov %rax,8(%rsp)
mov $1,%rax
mov %rax,16(%rsp)
pop %rax
pop %rdi
pop %rsi
call *%rax
mov %rax,24(%rsp)
pop %rax
pop %rdi
pop %rsi
pop %rdx
call *%rax
ret
